---
# Implement your Workload deployment tasks here

- name: define user projects
  set_fact:
    ocp_project_amq_streams: "amq-streams-{{ guid }}"
    ocp_project_kafka_security: "kafka-security-{{ guid }}"
    ocp_project_kafka_mirrormaker_source: "kafka-mirrormaker-europe-{{ guid }}"
    ocp_project_kafka_mirrormaker_target: "kafka-mirrormaker-us-{{ guid }}"

- name: create projects for user
  k8s:
    state: present
    definition: "{{ lookup('template', role_path ~ '/templates/namespace.j2' ) | from_yaml }}"
  vars:
    ocp_project: "{{ item }}"
  loop:
    - "{{ ocp_project_amq_streams }}"
    - "{{ ocp_project_kafka_security }}"
    - "{{ ocp_project_kafka_mirrormaker_source }}"
    - "{{ ocp_project_kafka_mirrormaker_target }}"

- name: give user admin privileges in namespace
  k8s:
    state: present
    namespace: "{{ item }}"
    definition: "{{ lookup('template', role_path ~ '/templates/namespace-admin-rb.j2' ) | from_yaml }}"
  loop:
    - "{{ ocp_project_amq_streams }}"
    - "{{ ocp_project_kafka_security }}"
    - "{{ ocp_project_kafka_mirrormaker_source }}"
    - "{{ ocp_project_kafka_mirrormaker_target }}"

- name: delete existing limitrange
  k8s:
    state: absent
    namespace: "{{ item }}"
    name: "{{ item }}-core-resource-limits"
    api_version: v1
    kind: LimitRange
  loop:
    - "{{ ocp_project_amq_streams }}"
    - "{{ ocp_project_kafka_security }}"
    - "{{ ocp_project_kafka_mirrormaker_source }}"
    - "{{ ocp_project_kafka_mirrormaker_target }}"

- name: create limitrange in namespace
  k8s:
    state: present
    namespace: "{{ item }}"
    definition: "{{ lookup('template', role_path ~ '/templates/limitrange.j2' ) | from_yaml }}"
  vars:
    ocp_project: "{{ item }}"
  loop:
    - "{{ ocp_project_amq_streams }}"
    - "{{ ocp_project_kafka_security }}"
    - "{{ ocp_project_kafka_mirrormaker_source }}"
    - "{{ ocp_project_kafka_mirrormaker_target }}"

- name: "amq streams tasks in {{ ocp_project_amq_streams }} namespace"
  include_tasks: workload_amq_streams.yml
  vars:
    ocp_project_amq_streams_operator: "{{ ocp_project_amq_streams }}"

- name: amq streams tasks in "{{ ocp_project_kafka_mirrormaker_source }}" namespace
  include_tasks: workload_amq_streams.yml
  vars:
    ocp_project_amq_streams_operator: "{{ ocp_project_kafka_mirrormaker_source }}"

- name: "amq streams tasks in {{ ocp_project_kafka_mirrormaker_target }} namespace"
  include_tasks: workload_amq_streams.yml
  vars:
    ocp_project_amq_streams_operator: "{{ ocp_project_kafka_mirrormaker_target }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
